#!/usr/bin/env node
/* The above line executes node from the computer environment */

const app = require('../app');
const server = require('http').createServer(app);
const debug = require('debug')('blognclock:server');



/* Normalize a port into a number, string, or false. */
const normalizePort = function(val) {
  const port = parseInt(val, 10);

  if(isNaN(port)) 
    return val;
  if(port >= 0)
    return port;
  return false;
};

/* SETTING PORT */
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);



/* What happens when an error is encountered */
const onError = function(error) {
  if(error.syscall !== 'listen')
    throw error;

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch(error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
};

/* What happens when everything is ok  */
const onListening = function() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;

  debug('Listening on ' + bind);
}

/* SETTING SERVER */
server.on('error', onError);
server.on('listen', onListening);
server.listen(port);
